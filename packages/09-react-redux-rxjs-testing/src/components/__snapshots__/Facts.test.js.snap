// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Facts Component it renders a list of facts 1`] = `
Array [
  <header>
    <h1>
      Cat facts
    </h1>
  </header>,
  .c0 {
  display: inline-block;
  text-align: center;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: black;
  border: 2px solid black;
  font-family: "Segoe UI",Tahoma,Geneva,Verdana,sans-serif;
  cursor: pointer;
  margin-left: 0;
  margin-right: 20px;
}

.c0:hover {
  background: rgba(0,0,0,0.1);
}

<a
    className="c0"
    onClick={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  >
    Refresh Facts
  </a>,
  .c1 {
  display: inline-block;
}

.c1 label {
  margin-left: 10px;
}

.c0 {
  padding-right: 20px;
  line-height: 40px;
}

<div
    className="c0 c1"
  >
    <strong>
      Endpoint:
    </strong>
    <label>
      <input
        checked={false}
        name="lambda"
        onChange={[Function]}
        type="radio"
        value="facts"
      />
        
      Facts
    </label>
    <label>
      <input
        checked={false}
        name="lambda"
        onChange={[Function]}
        type="radio"
        value="slow-facts"
      />
        
      Slow Facts
    </label>
  </div>,
  .c1 {
  display: inline-block;
}

.c1 label {
  margin-left: 10px;
}

.c0 {
  padding-right: 20px;
  line-height: 40px;
}

<div
    className="c0 c1"
  >
    <strong>
      Animals:
    </strong>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="cat"
      />
        
      Cat
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="dog"
      />
        
      Dog
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="snail"
      />
        
      Snail
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="horse"
      />
        
      Horse
    </label>
  </div>,
  .c1 {
  display: inline-block;
}

.c1 select {
  margin-left: 10px;
}

.c0 {
  line-height: 40px;
}

<label
    className="c0 c1"
  >
    <strong>
      Amount
    </strong>
    <select
      name="amount"
      onChange={[Function]}
    >
      <option
        value={8}
      >
        8
      </option>
      <option
        value={16}
      >
        16
      </option>
      <option
        value={32}
      >
        32
      </option>
      <option
        value={64}
      >
        64
      </option>
    </select>
  </label>,
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 75px;
  padding: 20px 30px 20px 10px;
  font-family: "Segoe UI",Tahoma,Geneva,Verdana,sans-serif;
  font-size: 20px;
  font-weight: lighter;
  line-height: 25px;
  background: #FFFAE9;
  color: #D8C685;
  border-color: #D8C685;
  border-width: 2px;
  border-style: solid;
  border-radius: 5px;
  text-shadow: 1px 1px 1px rgba(0,0,0,0.9);
  text-align: justify;
}

.c3 {
  margin-right: 20px;
  width: 100px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-top: 20px;
}

.c1 {
  margin-bottom: 10px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

@media (min-width:1024px) {
  .c1 {
    -webkit-flex-basis: calc(50% - 5px);
    -ms-flex-preferred-size: calc(50% - 5px);
    flex-basis: calc(50% - 5px);
  }
}

<div
    className="c0"
  >
    <div
      className="c1 c2"
      type="cat"
    >
      <img
        className="c3"
        src="cat.svg"
      />
      a cat is funny
    </div>
  </div>,
]
`;

exports[`Facts Component it renders empty list of facts 1`] = `
Array [
  <header>
    <h1>
      Cat facts
    </h1>
  </header>,
  .c0 {
  display: inline-block;
  text-align: center;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: black;
  border: 2px solid black;
  font-family: "Segoe UI",Tahoma,Geneva,Verdana,sans-serif;
  cursor: pointer;
  margin-left: 0;
  margin-right: 20px;
}

.c0:hover {
  background: rgba(0,0,0,0.1);
}

<a
    className="c0"
    onClick={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  >
    Refresh Facts
  </a>,
  .c1 {
  display: inline-block;
}

.c1 label {
  margin-left: 10px;
}

.c0 {
  padding-right: 20px;
  line-height: 40px;
}

<div
    className="c0 c1"
  >
    <strong>
      Endpoint:
    </strong>
    <label>
      <input
        checked={false}
        name="lambda"
        onChange={[Function]}
        type="radio"
        value="facts"
      />
        
      Facts
    </label>
    <label>
      <input
        checked={false}
        name="lambda"
        onChange={[Function]}
        type="radio"
        value="slow-facts"
      />
        
      Slow Facts
    </label>
  </div>,
  .c1 {
  display: inline-block;
}

.c1 label {
  margin-left: 10px;
}

.c0 {
  padding-right: 20px;
  line-height: 40px;
}

<div
    className="c0 c1"
  >
    <strong>
      Animals:
    </strong>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="cat"
      />
        
      Cat
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="dog"
      />
        
      Dog
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="snail"
      />
        
      Snail
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="horse"
      />
        
      Horse
    </label>
  </div>,
  .c1 {
  display: inline-block;
}

.c1 select {
  margin-left: 10px;
}

.c0 {
  line-height: 40px;
}

<label
    className="c0 c1"
  >
    <strong>
      Amount
    </strong>
    <select
      name="amount"
      onChange={[Function]}
    >
      <option
        value={8}
      >
        8
      </option>
      <option
        value={16}
      >
        16
      </option>
      <option
        value={32}
      >
        32
      </option>
      <option
        value={64}
      >
        64
      </option>
    </select>
  </label>,
  .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-top: 20px;
}

<div
    className="c0"
  />,
]
`;

exports[`Facts Component it renders loading facts 1`] = `
Array [
  <header>
    <h1>
      Cat facts
    </h1>
  </header>,
  .c0 {
  display: inline-block;
  text-align: center;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: black;
  border: 2px solid black;
  font-family: "Segoe UI",Tahoma,Geneva,Verdana,sans-serif;
  cursor: pointer;
  margin-left: 0;
  margin-right: 20px;
}

.c0:hover {
  background: rgba(0,0,0,0.1);
}

<a
    className="c0"
    onClick={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  >
    Refresh Facts
  </a>,
  .c1 {
  display: inline-block;
}

.c1 label {
  margin-left: 10px;
}

.c0 {
  padding-right: 20px;
  line-height: 40px;
}

<div
    className="c0 c1"
  >
    <strong>
      Endpoint:
    </strong>
    <label>
      <input
        checked={false}
        name="lambda"
        onChange={[Function]}
        type="radio"
        value="facts"
      />
        
      Facts
    </label>
    <label>
      <input
        checked={false}
        name="lambda"
        onChange={[Function]}
        type="radio"
        value="slow-facts"
      />
        
      Slow Facts
    </label>
  </div>,
  .c1 {
  display: inline-block;
}

.c1 label {
  margin-left: 10px;
}

.c0 {
  padding-right: 20px;
  line-height: 40px;
}

<div
    className="c0 c1"
  >
    <strong>
      Animals:
    </strong>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="cat"
      />
        
      Cat
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="dog"
      />
        
      Dog
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="snail"
      />
        
      Snail
    </label>
    <label>
      <input
        checked={false}
        name="animals"
        onChange={[Function]}
        type="checkbox"
        value="horse"
      />
        
      Horse
    </label>
  </div>,
  .c1 {
  display: inline-block;
}

.c1 select {
  margin-left: 10px;
}

.c0 {
  line-height: 40px;
}

<label
    className="c0 c1"
  >
    <strong>
      Amount
    </strong>
    <select
      name="amount"
      onChange={[Function]}
    >
      <option
        value={8}
      >
        8
      </option>
      <option
        value={16}
      >
        16
      </option>
      <option
        value={32}
      >
        32
      </option>
      <option
        value={64}
      >
        64
      </option>
    </select>
  </label>,
  .c2 {
  display: inline-block;
  position: relative;
  width: 100px;
  height: 100px;
}

.c2 div {
  position: absolute;
  border: 4px solid #000;
  opacity: 1;
  border-radius: 50%;
  -webkit-animation: lhyzzy 1s cubic-bezier(0,0.2,0.8,1) infinite;
  animation: lhyzzy 1s cubic-bezier(0,0.2,0.8,1) infinite;
}

.c2 div:nth-child(2) {
  -webkit-animation-delay: -0.5s;
  animation-delay: -0.5s;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-top: 20px;
}

.c1 {
  margin: 50px auto 0;
}

<div
    className="c0"
  >
    <div
      className="c1 c2"
      size={100}
    >
      <div />
      <div />
    </div>
  </div>,
]
`;
